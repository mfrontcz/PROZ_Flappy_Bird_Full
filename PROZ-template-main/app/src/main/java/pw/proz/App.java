/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pw.proz;

import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;

import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class App extends Application {

    private static Scene sceneMenu;
    private static Scene scoreMenu;
    private static boolean gameplay;
    private static GameWindow game;

    @Override
    public void start(Stage mainStage) throws Exception{
        game = new GameWindow();
        sceneMenu = new Scene(createMenu(mainStage));
        mainStage.setScene(sceneMenu);
        mainStage.setTitle("Flappy Bird Main Menu");
        mainStage.setResizable(false);
        mainStage.setAlwaysOnTop(true);
        mainStage.show();
    }

    private Parent createMenu(Stage mainStage) {
        Pane root = new Pane();

        ImageView background = new ImageView(new Image(getClass().getResource("/images/menu_background.png").toExternalForm()));
        background.setFitHeight(GameWindow.getWINDOW_HEIGHT());
        background.setFitWidth(GameWindow.getWINDOW_WIDTH());

        Button startButton = new Button("Start Game");
        startButton.setDefaultButton(true);
        startButton.setPrefSize(200, 50);
        startButton.setOnAction(event ->  {
            if (!gameplay) {
                gameplay = true;
                try {
                    game.start(mainStage);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
        Button scoreButton = new Button("View Score");
        scoreButton.setPrefSize(200, 50);
        scoreButton.setOnAction(event -> {
            scoreMenu = new Scene(createHoF(mainStage));
            mainStage.setScene(scoreMenu);
            mainStage.setTitle("Hall of Fame");
            mainStage.setResizable(false);
            mainStage.setAlwaysOnTop(true);
            mainStage.show();
        });
        Button exitButton = new Button("Exit Game");
        exitButton.setPrefSize(200, 50);
        exitButton.setCancelButton(true);
        exitButton.setOnAction(event -> mainStage.close());

        VBox buttons = new VBox(100, startButton, scoreButton, exitButton);
        buttons.setAlignment(Pos.CENTER);
        buttons.setLayoutX(GameWindow.getWINDOW_WIDTH()/2.0 - 100);
        buttons.setLayoutY(100);

        root.getChildren().addAll(background, buttons);
        return root;
    }

    private Parent createHoF(Stage mainStage) {
        Pane root = new Pane();

        ImageView background = new ImageView(new Image(getClass().getResource("/images/score_background.png").toExternalForm()));
        background.setFitHeight(GameWindow.getWINDOW_HEIGHT());
        background.setFitWidth(GameWindow.getWINDOW_WIDTH());

        VBox highscores = new VBox(100);
        highscores.setAlignment(Pos.CENTER);
        highscores.setLayoutX(GameWindow.getWINDOW_WIDTH()/2.0);
        highscores.setLayoutY(100);
        Text score;
        for ( int i = 0; i < GameWindow.scoreTableSize; i++) {
            score = new Text(String.valueOf(GameWindow.scoreTable[i]));
            score.setFont(Font.font("Georgia, serif", FontWeight.EXTRA_BOLD, 30));
            score.setFill(Color.WHITE);
            score.setStroke(Color.BLACK);
            highscores.getChildren().add(score);
        }
        Button returnButton = new Button("Return");
        returnButton.setPrefSize(200, 50);
        returnButton.setOnAction(actionEvent -> {
            mainStage.setScene(sceneMenu);
            mainStage.setTitle("Flappy Bird Main Menu");
            mainStage.show();
        });
        returnButton.setCancelButton(true);
        HBox button = new HBox(returnButton);
        button.setAlignment(Pos.BASELINE_CENTER);
        button.setLayoutX(GameWindow.getWINDOW_WIDTH()/2.0 - 100);
        button.setLayoutY(GameWindow.getWINDOW_HEIGHT() - 100);
        root.getChildren().addAll(background, highscores, button);
        return root;
    }

    public static Scene getMenu() { return sceneMenu; }
    public String getGreeting() { return "Hello World!"; }
    public static void setGameplay(boolean value) { gameplay = value; }
    public static Scene getScoreMenu() { return scoreMenu; }
    public static GameWindow getGame() { return game; }
    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        launch(args);
    }
}
